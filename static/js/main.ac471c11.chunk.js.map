{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","ids","Array","length","fill","map","el","uuidv4","minLengths","i","id","option","App","useState","isStarted","setIsStarted","isReversed","setIsReversed","NONE","sortType","setSortType","minLengthFilter","setMinLengthFilter","goods","minLen","visibleGoods","filter","good","sort","a","b","ALPABET","localeCompare","reverse","getReorderedGoods","className","cn","type","onClick","prevIsReverse","LENGTH","name","value","onChange","event","target","index","ReactDOM","render","document","getElementById"],"mappings":"6KAyBKA,E,4EApBCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAM,IAAIC,MAAcF,EAAgBG,QAC3CC,KAAK,IACLC,KAAI,SAAAC,GAAE,OAAIA,EAAKC,iBACZC,EAAa,IAAIN,MAAMF,EAAgBG,QAC1CC,KAAK,IACLC,KAAI,SAACC,EAAIG,GAAL,MAAY,CAAEC,GAAIJ,EAAKC,cAAUI,OAAQF,EAAI,O,SAE/CV,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA+BE,IAAMa,EAAU,WACrB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAASd,EAASmB,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8CP,mBAAS,GAAvD,mBAAOQ,EAAP,KAAwBC,EAAxB,KAEMC,EA/BR,SACEA,EACAC,EACAL,EACAH,GAEA,IAAMS,EAAe,YAAIF,GAAOG,QAAO,SAAAC,GAAI,OAAIA,EAAKxB,QAAUqB,KAgB9D,OAdIL,IAAapB,EAASmB,MACxBO,EAAaG,MAAK,SAACC,EAAGC,GACpB,OAAIX,IAAapB,EAASgC,QACjBF,EAAEG,cAAcF,GAGlBD,EAAE1B,OAAS2B,EAAE3B,UAIpBa,GACFS,EAAaQ,UAGRR,EASOS,CACZlC,EACAqB,EACAF,EACAH,GAGF,OACE,qBAAKmB,UAAU,UAAf,SACIrB,EAWE,sBAAKqB,UAAU,eAAf,UACE,sBAAKA,UAAU,eAAf,UACE,wBACEA,UAAWC,IACT,oBACA,CAAE,WAAYjB,IAAapB,EAASgC,UAEtCM,KAAK,SACLC,QAAS,WACPrB,GAAc,SAAAsB,GAAa,OAAKpB,IAAapB,EAASgC,UACjDQ,KAGLnB,EAAYrB,EAASgC,UAXzB,iCAiBA,wBACEI,UAAWC,IACT,oBACA,CAAE,WAAYjB,IAAapB,EAASyC,SAEtCH,KAAK,SACLC,QAAS,WACPrB,GAAc,SAAAsB,GAAa,OAAKpB,IAAapB,EAASyC,SACjDD,KAGLnB,EAAYrB,EAASyC,SAXzB,4BAiBA,wBACEL,UAAWC,IACT,oBACA,CAAE,WAAYpB,IAEhBqB,KAAK,SACLC,QAAS,kBAAMrB,GAAc,SAAAsB,GAAa,OAAKA,MANjD,qBAWA,wBACEJ,UAAU,qCACVE,KAAK,SACLC,QAAS,WACPlB,EAAYrB,EAASmB,MACrBI,EAAmB,GACnBL,GAAc,IANlB,mBAYA,wBACEkB,UAAU,8BACVM,KAAK,YACLC,MAAOrB,EACPsB,SAAU,SAACC,GAAD,OAAWtB,GAAoBsB,EAAMC,OAAOH,QAJxD,SAMGlC,EAAWH,KAAI,gBAAGK,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAP,OACd,wBAAQ+B,MAAO/B,EAAf,SACGA,GADyBD,WAOlC,oBAAIyB,UAAU,0BAAd,SACGZ,EAAMlB,KAAI,SAACsB,EAAMmB,GAAP,OACT,oBAAIX,UAAU,cAAd,SACGR,GAD8B1B,EAAI6C,YApF3C,wBACEX,UAAU,6BACVE,KAAK,SACLC,QAAS,kBAAMvB,GAAa,IAH9B,sBCtEVgC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ac471c11.chunk.js","sourcesContent":["import { FC, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport cn from 'classnames';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst ids = new Array<string>(goodsFromServer.length)\n  .fill('')\n  .map(el => el + uuidv4());\nconst minLengths = new Array(goodsFromServer.length)\n  .fill('')\n  .map((el, i) => ({ id: el + uuidv4(), option: i + 1 }));\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  minLen: number,\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods].filter(good => good.length >= minLen);\n\n  if (sortType !== SortType.NONE) {\n    visibleGoods.sort((a, b) => {\n      if (sortType === SortType.ALPABET) {\n        return a.localeCompare(b);\n      }\n\n      return a.length - b.length;\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: FC = () => {\n  const [isStarted, setIsStarted] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [minLengthFilter, setMinLengthFilter] = useState(1);\n\n  const goods = getReorderedGoods(\n    goodsFromServer,\n    minLengthFilter,\n    sortType,\n    isReversed,\n  );\n\n  return (\n    <div className=\"App box\">\n      {!isStarted\n        ? (\n          <button\n            className=\"button is-primary is-large\"\n            type=\"button\"\n            onClick={() => setIsStarted(true)}\n          >\n            Start\n          </button>\n        )\n        : (\n          <div className=\"App__content\">\n            <div className=\"App__buttons\">\n              <button\n                className={cn(\n                  'button is-primary',\n                  { 'is-light': sortType === SortType.ALPABET },\n                )}\n                type=\"button\"\n                onClick={() => {\n                  setIsReversed(prevIsReverse => (sortType === SortType.ALPABET\n                    ? !prevIsReverse\n                    : false\n                  ));\n                  setSortType(SortType.ALPABET);\n                }}\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                className={cn(\n                  'button is-primary',\n                  { 'is-light': sortType === SortType.LENGTH },\n                )}\n                type=\"button\"\n                onClick={() => {\n                  setIsReversed(prevIsReverse => (sortType === SortType.LENGTH\n                    ? !prevIsReverse\n                    : false\n                  ));\n                  setSortType(SortType.LENGTH);\n                }}\n              >\n                Sort by length\n              </button>\n\n              <button\n                className={cn(\n                  'button is-primary',\n                  { 'is-light': isReversed },\n                )}\n                type=\"button\"\n                onClick={() => setIsReversed(prevIsReverse => !prevIsReverse)}\n              >\n                Reverse\n              </button>\n\n              <button\n                className=\"button is-danger is-large is-reset\"\n                type=\"button\"\n                onClick={() => {\n                  setSortType(SortType.NONE);\n                  setMinLengthFilter(1);\n                  setIsReversed(false);\n                }}\n              >\n                Reset\n              </button>\n\n              <select\n                className=\"select is-primary is-medium\"\n                name=\"minLength\"\n                value={minLengthFilter}\n                onChange={(event) => setMinLengthFilter(+event.target.value)}\n              >\n                {minLengths.map(({ id, option }) => (\n                  <option value={option} key={id}>\n                    {option}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <ul className=\"Goods content is-medium\">\n              {goods.map((good, index) => (\n                <li className=\"Goods__item\" key={ids[index]}>\n                  {good}\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}